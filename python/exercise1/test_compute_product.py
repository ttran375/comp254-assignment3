import sys

import pytest

from .compute_product import compute_product

sys.setrecursionlimit(1500)


@pytest.mark.parametrize(
    "m, n, expected",
    [
        (3, 4, 12),
        (1, 1000, 1000),
        (10, 10, 100),
        (100, 100, 10000),
        (1, 1, 1),
        (2, 2, 4),
        (3, 3, 9),
        (4, 4, 16),
        (5, 5, 25),
        (1000, 1, 1000),
        (1, 1000, 1000),
        (2, 50, 100),
        (50, 2, 100),
        (7, 8, 56),
        (8, 7, 56),
        (3, 9, 27),
        (9, 3, 27),
        (15, 10, 150),
        (10, 15, 150),
        (123, 456, 56088),
        (456, 123, 56088),
        (99, 99, 9801),
        (200, 300, 60000),
        (300, 200, 60000),
        (500, 2, 1000),
        (2, 500, 1000),
        (999, 1, 999),
        (1, 999, 999),
        (25, 40, 1000),
        (40, 25, 1000),
        (6, 7, 42),
        (7, 6, 42),
        (18, 5, 90),
        (5, 18, 90),
        (12, 8, 96),
        (8, 12, 96),
        (1234, 1, 1234),
        (1, 1234, 1234),
        (500, 1, 500),
        (1, 500, 500),
        (1000, 1, 1000),
        (1, 1000, 1000),
        (50, 20, 1000),
        (20, 50, 1000),
        (100, 15, 1500),
        (15, 100, 1500),
        (30, 50, 1500),
        (50, 30, 1500),
        (75, 20, 1500),
        (20, 75, 1500),
    ],
)
def test_compute_product(m, n, expected):
    assert compute_product(m, n) == expected
