import pytest
from .is_palindrome import is_palindrome


@pytest.mark.parametrize(
    "test_input,expected",
    [
        ("racecar", True),
        ("mom", True),
        ("hello", False),
        ("", True),
        ("a", True),
        ("ab", False),
        ("ABC", False),
        ("abba", True),
        ("abcba", True),
        ("abcd", False),
        ("noon", True),
        ("radar", True),
        ("level", True),
        ("deified", True),
        ("civic", True),
        ("rotor", True),
        ("kayak", True),
        ("reviver", True),
        ("madam", True),
        ("refer", True),
        ("palindrome", False),
        ("step on no pets", True),
        ("was it a car or a cat i saw", True),
        ("never odd or even", True),
        ("A man, a plan, a canal, Panama", True),
        ("Eva, can I see bees in a cave?", True),
        ("No 'x' in Nixon", True),
        ("Do geese see God?", True),
        ("Flee to me, remote elf", True),
        ("Go hang a salami, I'm a lasagna hog", True),
        ("Was it a car or a cat I saw?", True),
        ("A Santa at NASA", True),
        ("Ma is a nun, as I am", True),
        ("Sir, I demand, I am a maid named Iris", True),
        ("Solos", True),
        ("Rotator", True),
        ("Repaper", True),
        ("Sagas", True),
        ("Tenet", True),
        ("Radar", True),
        ("Deified", True),
        ("Racecar", True),
        ("Reviver", True),
        ("Rotator", True),
        ("rotor", True),
        ("civic", True),
        ("level", True),
        ("no lemon, no melon", True),
        ("stressed desserts", True),
        ("stack cats", True),
    ],
)
def test_is_palindrome(test_input, expected):
    assert is_palindrome(test_input) == expected
